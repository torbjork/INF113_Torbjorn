Question 1

Process 6162 launched: '/home/torbjorn/INF_113/Memory/a.out' (x86_64)
=========
[0x55555555526b] [Code - address of the Main function]
[0x555555558014] [Code - address of initialized global variable global_var]
[0x555555558018] [Code - address of global uninitialized variable global_var2] 
[0x555555558018] [Code - address of global now initialized variable global_var2 
[0x7ffff7e3b010] [Heap - address of heap variable heap_var] 
Not used
--------------
[0x7fffffffde64] [Stack - address of the variable main:stack_var] 
[0x7fffffffdddc] [Address of new value for stack variable f_stack_var]
[0x7fffffffdd3c] [Address of new value for stack variable f_stack_var]
[0x7fffffffdc9c] [Address of new value for stack variable f_stack_var]
[0x7fffffffdbfc] [Address of new value for stack variable f_stack_var]
[0x7fffffffdb5c] [Address of new value for stack variable f_stack_var]
[0x7fffffffdabc] [Address of new value for stack variable f_stack_var]
[0x7fffffffda1c] [Address of new value for stack variable f_stack_var]
[0x7fffffffd97c] [Address of new value for stack variable f_stack_var]
[0x7fffffffd8dc] [Address of new value for stack variable f_stack_var]
[0x7fffffffd83c] [Address of new value for stack variable f_stack_var]
=========



As we can see:
- The main function, i.e. the code, resides in 0x55555555... region of memory. The memory addresses for the code are lower than the memory addresses for the other parts of the process.
- Global variables are treated as part of the code, so they are stored in the same region of memory.
- As far as memory region is concerned, it does not matter whether global variables are initialized in the program or not.

- The stack variables reside in the 0x7fffffff... region of memory. As new memory addresses are requested, the address numbers decrease in value; ...74(hex) is less than ...a4(hex) and so on. For presentation purposes it would make sense to reverse the order in which the addresses for the stack variables appear so that the stack can be shown to grow in the direction of the heap, but the output from the program should be clear enough.

- The heap is in the 0x7ffff... region of memory (i.e. at lower-numbered addresses than the stack).

